package Project.Euler;

public class EvenFibonacciNumbers {

    // Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

    public static int evenFibNumbers(int num) {
        int answer = 0;
        int fib1 = 1;
        int fib2 = 2;

        answer += fib2;

        while (fib1 < num && fib2 < num) {
            int fib3 = fib1 + fib2;
            if (fib3 % 2 == 0) {
                answer += fib3;
            }
            if (fib1 < fib2) {
                fib1 = fib3;
            } else {
                fib2 = fib3;
            }
        }

        return answer;
    }

    // Time complexity is O(f) where f is the number of terms of fibonacci numbers that are smaller than the input numbers
    // Space complexity is O(1)
}
